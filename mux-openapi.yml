openapi: 3.0.3
info:
  title: Mux Video API
  version: 1.0.0
  description: |
    Mux Video API allows you to programmatically manage your video assets, live streams, and data.

    **Base URL**: https://api.mux.com

    **Authentication**: Basic authentication using Token ID as username and Token Secret as password

    **Rate Limits**: 
    - Video API: 300 requests per minute
    - Data API: 100 requests per minute

servers:
  - url: https://api.mux.com
    description: Production server

security:
  - BasicAuth: []

paths:
  # ASSETS
  /video/v1/assets:
    post:
      tags:
        - Assets
      operationId: createAsset
      summary: Create an asset
      description: Create a new video asset from a URL or by uploading directly
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssetRequest'
      responses:
        '201':
          description: Asset created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized

    get:
      tags:
        - Assets
      operationId: listAssets
      summary: List assets
      description: List all video assets for your account
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 25
            maximum: 100
          description: Number of items to include in the response (max 100)
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Offset by this many pages, of the size of limit
        - name: live_stream_id
          in: query
          required: false
          schema:
            type: string
          description: Filter assets by live stream ID
        - name: upload_id
          in: query
          required: false
          schema:
            type: string
          description: Filter assets by upload ID
      responses:
        '200':
          description: Assets retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsListResponse'

  /video/v1/assets/{ASSET_ID}:
    get:
      tags:
        - Assets
      operationId: getAsset
      summary: Retrieve an asset
      description: Get details about a specific video asset
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
      responses:
        '200':
          description: Asset retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
        '404':
          description: Asset not found

    delete:
      tags:
        - Assets
      operationId: deleteAsset
      summary: Delete an asset
      description: Delete a video asset. This action is irreversible
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
      responses:
        '204':
          description: Asset deleted successfully
        '404':
          description: Asset not found

    patch:
      tags:
        - Assets
      operationId: updateAsset
      summary: Update an asset
      description: Update the details of a video asset
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssetRequest'
      responses:
        '200':
          description: Asset updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'

  /video/v1/assets/{ASSET_ID}/input-info:
    get:
      tags:
        - Assets
      operationId: getAssetInputInfo
      summary: Retrieve asset input info
      description: Get the input objects that were used to create the asset along with any settings that were applied to each input
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
      responses:
        '200':
          description: Asset input info retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetInputInfoResponse'

  /video/v1/assets/{ASSET_ID}/playback-ids:
    post:
      tags:
        - Assets
      operationId: createPlaybackId
      summary: Create a playback ID
      description: Create a new playback ID for an asset
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlaybackIdRequest'
      responses:
        '201':
          description: Playback ID created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackIdResponse'

  /video/v1/assets/{ASSET_ID}/playback-ids/{PLAYBACK_ID}:
    get:
      tags:
        - Assets
      operationId: getPlaybackId
      summary: Retrieve a playback ID
      description: Get details about a specific playback ID
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
        - name: PLAYBACK_ID
          in: path
          required: true
          schema:
            type: string
          description: The playback ID
      responses:
        '200':
          description: Playback ID retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackIdResponse'

    delete:
      tags:
        - Assets
      operationId: deletePlaybackId
      summary: Delete a playback ID
      description: Delete a playback ID from an asset
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
        - name: PLAYBACK_ID
          in: path
          required: true
          schema:
            type: string
          description: The playback ID
      responses:
        '204':
          description: Playback ID deleted successfully

  /video/v1/assets/{ASSET_ID}/master-access:
    put:
      tags:
        - Assets
      operationId: updateMasterAccess
      summary: Update master access
      description: Add or remove access to the master (highest-quality) version of the asset in MP4 format
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMasterAccessRequest'
      responses:
        '200':
          description: Master access updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'

  /video/v1/assets/{ASSET_ID}/static-renditions:
    post:
      tags:
        - Assets
      operationId: createStaticRendition
      summary: Create a static rendition for an asset
      description: Create a static MP4 rendition for an asset
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStaticRenditionRequest'
      responses:
        '201':
          description: Static rendition created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRenditionResponse'

  /video/v1/assets/{ASSET_ID}/static-renditions/{STATIC_RENDITION_ID}:
    delete:
      tags:
        - Assets
      operationId: deleteStaticRendition
      summary: Delete a static rendition for an asset
      description: Delete a static MP4 rendition for an asset
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
        - name: STATIC_RENDITION_ID
          in: path
          required: true
          schema:
            type: string
          description: The static rendition ID
      responses:
        '204':
          description: Static rendition deleted successfully

  /video/v1/assets/{ASSET_ID}/tracks:
    post:
      tags:
        - Assets
      operationId: createAssetTrack
      summary: Create an asset track
      description: Add a text track (subtitles, captions, or chapters) to an asset
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssetTrackRequest'
      responses:
        '201':
          description: Asset track created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTrackResponse'

  /video/v1/assets/{ASSET_ID}/tracks/{TRACK_ID}:
    delete:
      tags:
        - Assets
      operationId: deleteAssetTrack
      summary: Delete an asset track
      description: Delete a text track from an asset
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
        - name: TRACK_ID
          in: path
          required: true
          schema:
            type: string
          description: The track ID
      responses:
        '204':
          description: Asset track deleted successfully

  /video/v1/assets/{ASSET_ID}/tracks/{TRACK_ID}/generate-subtitles:
    post:
      tags:
        - Assets
      operationId: generateTrackSubtitles
      summary: Generate track subtitles
      description: Generate subtitles for a given audio track using automatic speech recognition
      parameters:
        - name: ASSET_ID
          in: path
          required: true
          schema:
            type: string
          description: The asset ID
        - name: TRACK_ID
          in: path
          required: true
          schema:
            type: string
          description: The track ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSubtitlesRequest'
      responses:
        '201':
          description: Subtitle generation started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTrackResponse'

  # PLAYBACK IDS
  /video/v1/playback-ids/{PLAYBACK_ID}:
    get:
      tags:
        - Playback IDs
      operationId: getPlaybackIdInfo
      summary: Retrieve an asset or live stream ID
      description: Retrieve the identifier of the asset or live stream associated with the Playback ID
      parameters:
        - name: PLAYBACK_ID
          in: path
          required: true
          schema:
            type: string
          description: The playback ID
      responses:
        '200':
          description: Playback ID info retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackIdInfoResponse'

  # DIRECT UPLOADS
  /video/v1/uploads:
    post:
      tags:
        - Direct Uploads
      operationId: createDirectUpload
      summary: Create a new direct upload URL
      description: Create a new direct upload which will return a URL that can be used to upload a video file directly
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectUploadRequest'
      responses:
        '201':
          description: Direct upload URL created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectUploadResponse'

    get:
      tags:
        - Direct Uploads
      operationId: listDirectUploads
      summary: List direct uploads
      description: List all direct uploads for your account
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 25
            maximum: 100
          description: Number of items to include in the response
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Offset by this many pages
      responses:
        '200':
          description: Direct uploads retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectUploadsListResponse'

  /video/v1/uploads/{UPLOAD_ID}:
    get:
      tags:
        - Direct Uploads
      operationId: getDirectUpload
      summary: Retrieve a single direct upload's info
      description: Get information about a specific direct upload
      parameters:
        - name: UPLOAD_ID
          in: path
          required: true
          schema:
            type: string
          description: The upload ID
      responses:
        '200':
          description: Direct upload info retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectUploadResponse'

  /video/v1/uploads/{UPLOAD_ID}/cancel:
    put:
      tags:
        - Direct Uploads
      operationId: cancelDirectUpload
      summary: Cancel a direct upload
      description: Cancel a direct upload that is currently in progress
      parameters:
        - name: UPLOAD_ID
          in: path
          required: true
          schema:
            type: string
          description: The upload ID
      responses:
        '200':
          description: Direct upload cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectUploadResponse'

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: Use your Mux Token ID as username and Token Secret as password

  schemas:
    # ASSET SCHEMAS
    CreateAssetRequest:
      type: object
      properties:
        input:
          oneOf:
            - type: string
              format: uri
              description: URL of the video file to ingest
            - type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                  overlay_settings:
                    type: object
                  generated_subtitles:
                    type: array
        playback_policy:
          type: array
          items:
            type: string
            enum: [public, signed]
          default: [public]
          description: Whether the asset is publicly viewable or requires a signed URL
        video_quality:
          type: string
          enum: [basic, plus, premium]
          default: plus
          description: Max resolution tier for the asset
        encoding_tier:
          type: string
          enum: [baseline, smart]
          default: smart
          description: Encoding tier for the asset
        mp4_support:
          type: string
          enum: [none, standard, capped-1080p, audio-only, audio-only-capped-1080p]
          default: none
          description: Specify what level of support for mp4 playback
        normalize_audio:
          type: boolean
          default: false
          description: Normalize the audio track loudness level
        master_access:
          type: string
          enum: [none, temporary]
          default: none
          description: Add or remove access to the master version of the video
        test:
          type: boolean
          default: false
          description: Marks the asset as a test asset when the value is true
        passthrough:
          type: string
          description: Arbitrary user-supplied metadata for the asset
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Metadata for the asset as key-value pairs

    UpdateAssetRequest:
      type: object
      properties:
        passthrough:
          type: string
          description: Arbitrary user-supplied metadata for the asset
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Metadata for the asset as key-value pairs
        mp4_support:
          type: string
          enum: [none, standard, capped-1080p, audio-only, audio-only-capped-1080p]
          description: Specify what level of support for mp4 playbook
        master_access:
          type: string
          enum: [none, temporary]
          description: Add or remove access to the master version of the video

    AssetResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              description: Unique identifier for the Asset
            status:
              type: string
              enum: [preparing, ready, errored]
              description: The status of the asset
            created_at:
              type: string
              format: date-time
            aspect_ratio:
              type: string
              description: The aspect ratio of the asset in the form of width:height
            duration:
              type: number
              description: The duration of the asset in seconds
            max_stored_resolution:
              type: string
              enum: [Audio only, SD, HD, FHD, UHD]
              description: The maximum resolution that has been stored for the asset
            max_stored_frame_rate:
              type: number
              description: The maximum frame rate that has been stored for the asset
            resolution_tier:
              type: string
              enum: [baseline, smart, plus, premium]
            encoding_tier:
              type: string
              enum: [baseline, smart]
            max_resolution_tier:
              type: string
              enum: [1080p, 1440p, 2160p]
            video_quality:
              type: string
              enum: [basic, plus, premium]
            playback_ids:
              type: array
              items:
                $ref: '#/components/schemas/PlaybackId'
            tracks:
              type: array
              items:
                $ref: '#/components/schemas/Track'
            mp4_support:
              type: string
              enum: [none, standard, capped-1080p, audio-only, audio-only-capped-1080p]
            master_access:
              type: string
              enum: [none, temporary]
            test:
              type: boolean
            passthrough:
              type: string
            metadata:
              type: object
              additionalProperties:
                type: string
            static_renditions:
              type: object
              properties:
                status:
                  type: string
                  enum: [preparing, ready, errored]
                files:
                  type: array
                  items:
                    $ref: '#/components/schemas/StaticRendition'
            upload_id:
              type: string
              description: Unique identifier for the Direct Upload
            ingest_type:
              type: string
              enum: [on_demand_url, on_demand_direct_upload, live_rtmp]

    AssetsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AssetResponse/properties/data'

    AssetInputInfoResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              settings:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
              file:
                type: object
                properties:
                  container_format:
                    type: string
                  tracks:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [video, audio]
                        duration:
                          type: number
                        encoding:
                          type: string
                        width:
                          type: integer
                        height:
                          type: integer
                        frame_rate:
                          type: number
                        sample_rate:
                          type: integer
                        sample_size:
                          type: integer
                        channels:
                          type: integer

    # PLAYBACK ID SCHEMAS
    CreatePlaybackIdRequest:
      type: object
      required:
        - policy
      properties:
        policy:
          type: string
          enum: [public, signed]
          description: Whether the playback ID is public or signed
        drm_configuration_id:
          type: string
          description: The DRM configuration used by this playback ID

    PlaybackIdResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PlaybackId'

    PlaybackId:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the PlaybackID
        policy:
          type: string
          enum: [public, signed]
        drm_configuration_id:
          type: string

    PlaybackIdInfoResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            policy:
              type: string
              enum: [public, signed]
            object:
              type: object
              properties:
                type:
                  type: string
                  enum: [asset, live_stream]
                id:
                  type: string

    # TRACK SCHEMAS
    Track:
      type: object
      properties:
        type:
          type: string
          enum: [video, audio, text]
        max_width:
          type: integer
        max_height:
          type: integer
        max_frame_rate:
          type: number
        id:
          type: string
        duration:
          type: number
        max_channels:
          type: integer
        text_type:
          type: string
          enum: [subtitles]
        text_source:
          type: string
          enum: [uploaded, embedded, generated]
        language_code:
          type: string
        name:
          type: string
        closed_captions:
          type: boolean
        passthrough:
          type: string

    CreateAssetTrackRequest:
      type: object
      required:
        - url
        - type
      properties:
        url:
          type: string
          format: uri
          description: The URL of the file that Mux should download and use
        type:
          type: string
          enum: [text, audio]
          description: The type of track
        text_type:
          type: string
          enum: [subtitles]
          description: For text tracks, the type of text track
        language_code:
          type: string
          description: The language code value must be a valid BCP 47 specification
        name:
          type: string
          description: The name of the track containing a human-readable description
        closed_captions:
          type: boolean
          default: false
          description: Indicates that the text track is a closed captions track
        passthrough:
          type: string
          description: Arbitrary user-supplied metadata for the track

    AssetTrackResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Track'

    GenerateSubtitlesRequest:
      type: object
      required:
        - generated_subtitles
      properties:
        generated_subtitles:
          type: array
          items:
            type: object
            properties:
              language_code:
                type: string
                description: BCP 47 language code
                example: en
              name:
                type: string
                description: Name for the subtitle track
                example: English (generated)
              passthrough:
                type: string
                description: Arbitrary user-supplied metadata

    # STATIC RENDITION SCHEMAS
    CreateStaticRenditionRequest:
      type: object
      required:
        - resolution
      properties:
        resolution:
          type: string
          enum: [highest, audio-only, 2160p, 1440p, 1080p, 720p, 540p, 360p, 270p]
          description: The resolution tier for the static rendition
        passthrough:
          type: string
          description: Arbitrary user-supplied metadata for the static rendition

    StaticRenditionResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StaticRendition'

    StaticRendition:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the static rendition
        type:
          type: string
          enum: [standard]
        ext:
          type: string
          example: mp4
        status:
          type: string
          enum: [preparing, ready, errored]
        resolution:
          type: string
          enum: [highest, audio-only, 2160p, 1440p, 1080p, 720p, 540p, 360p, 270p]
        name:
          type: string
          example: highest.mp4

    # MASTER ACCESS SCHEMAS
    UpdateMasterAccessRequest:
      type: object
      required:
        - master_access
      properties:
        master_access:
          type: string
          enum: [temporary, none]
          description: Add or remove access to the master version of the video

    # DIRECT UPLOAD SCHEMAS
    CreateDirectUploadRequest:
      type: object
      properties:
        timeout:
          type: integer
          default: 3600
          minimum: 60
          maximum: 604800
          description: Max time in seconds for the signed upload URL to be valid
        cors_origin:
          type: string
          description: If the upload URL will be used in a browser, you must specify the origin
        new_asset_settings:
          type: object
          properties:
            playback_policy:
              type: array
              items:
                type: string
                enum: [public, signed]
              default: [public]
            video_quality:
              type: string
              enum: [basic, plus, premium]
              default: plus
        test:
          type: boolean
          default: false
          description: Indicates if this is a test Direct Upload

    DirectUploadResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              description: Unique identifier for the Direct Upload
            timeout:
              type: integer
              description: Max time in seconds for the signed upload URL to be valid
            status:
              type: string
              enum: [waiting, asset_created, errored, cancelled, timed_out]
              description: The current status of the direct upload
            new_asset_settings:
              type: object
              properties:
                playback_policy:
                  type: array
                  items:
                    type: string
                    enum: [public, signed]
                video_quality:
                  type: string
                  enum: [basic, plus, premium]
            asset_id:
              type: string
              description: Only set once the upload is in the asset_created state
            error:
              type: object
              properties:
                type:
                  type: string
                messages:
                  type: array
                  items:
                    type: string
            cors_origin:
              type: string
            url:
              type: string
              format: uri
              description: The URL to upload the video file to
            test:
              type: boolean

    DirectUploadsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DirectUploadResponse/properties/data'

    # ERROR SCHEMAS
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            type:
              type: string
              example: invalid_request
            messages:
              type: array
              items:
                type: string
              example: ['The request is missing required parameters']
